

*ssc inst _gwtmean

*Programme fait à partir de "Comparaison.do

if "`c(username)'" =="guillaumedaudin" {
	global dir_baseline_results "~/Documents/Recherche/2013 -- Trade Costs -- local/results/baseline"
	global dir_referee1 "~/Documents/Recherche/2013 -- Trade Costs -- local/results/referee1"
	global dir "~/Documents/Recherche/2013 -- Trade Costs -- local"
	global dir_comparaison "~/Documents/Recherche/2013 -- Trade Costs -- local/results/comparaisons_various"
	global dir_temp ~/Downloads/temp_stata
	global dir_results "~/Documents/Recherche/2013 -- Trade Costs -- local/results"
	global dir_git "~/Répertoires Git/trade_costs_git"
	
	
}


*** Juillet 2020: Lise, tout sur mon OneDrive


/* Fixe Lise P112*/
if "`c(hostname)'" =="LAB0271A" {
	 

	* baseline results sur hummels_tra dans son intégralité
    global dir_baseline_results "C:\Users\lpatureau\OneDrive - Université Paris-Dauphine\Université Paris-Dauphine\trade_costs\results\baseline"
	
		
	* résultats selon méthode référé 1
	global dir_referee1 "C:\Users\lpatureau\OneDrive - Université Paris-Dauphine\Université Paris-Dauphine\trade_costs\results\referee1"
	
	* stocker la comparaison des résultats
	global dir_comparaison "C:\Users\lpatureau\OneDrive - Université Paris-Dauphine\Université Paris-Dauphine\trade_costs\results\referee1\comparaison_baseline_referee1"
	
	/* Il me manque pour faire méthode 2 en IV 
	- IV_referee1_panel/results_estimTC_`year'_sitc2_3_`mode'.dta
	- IV_referee1_yearly/results_estimTC_`year'_sitc2_3_`mode'.dta
	
	*/
	
	global dir_temp "C:\Users\lpatureau\OneDrive - Université Paris-Dauphine\Université Paris-Dauphine\trade_costs\temp"
	global dir "C:\Users\lpatureau\OneDrive - Université Paris-Dauphine\Université Paris-Dauphine\trade_costs"
	global dir_results "C:\Users\lpatureau\OneDrive - Université Paris-Dauphine\Université Paris-Dauphine\trade_costs\results"
	 
	 
	 
	}

/* Nouveau portable Lise */
if "`c(hostname)'" =="MSOP112C" {

	* baseline results sur hummels_tra dans son intégralité
    global dir_baseline_results "C:\Users\Ipatureau\OneDrive - Université Paris-Dauphine\Université Paris-Dauphine\trade_costs\results\baseline"
		
	* résultats selon méthode référé 1
	global dir_referee1 "C:\Users\Ipatureau\OneDrive - Université Paris-Dauphine\Université Paris-Dauphine\trade_costs\results\referee1"
	
	* stocker la comparaison des résultats
	global dir_comparaison "C:\Users\Ipatureau\OneDrive - Université Paris-Dauphine\Université Paris-Dauphine\trade_costs\results\referee1\comparaison_baseline_referee1"
	
	/* Il me manque pour faire méthode 2 en IV 
	- IV_referee1_panel/results_estimTC_`year'_sitc2_3_`mode'.dta
	- IV_referee1_yearly/results_estimTC_`year'_sitc2_3_`mode'.dta
	
	*/
	
	global dir_temp "C:\Users\Ipatureau\OneDrive - Université Paris-Dauphine\Université Paris-Dauphine\trade_costs\temp"
	global dir "C:\Users\Ipatureau\OneDrive - Université Paris-Dauphine\Université Paris-Dauphine\trade_costs"
	global dir_results "C:\Users\Ipatureau\OneDrive - Université Paris-Dauphine\Université Paris-Dauphine\trade_costs\results"
	}



set more off

	
	


	
******************************************************
******************************************************
do "$dir_git/Open_year_mode_method_model.do"

/*
******************Pour la table 2 du texte
collect clear

capture program drop table4_part
program table4_part
args method

global method `method'
if "$method"=="non_séparé" local time_span 1974 (1) 2019
*if "$method"=="baseline" local time_span 1974 (1) 1978
if "$method"=="séparé_pour_robustesse_ns" local time_span 1974 (1) 2019

foreach mode in air ves {


	capture erase $dir_temp/data_${method}_`mode'.dta
	foreach year of num `time_span'  {
		open_year_mode_method_model `year' `mode' $method
		capture append using $dir_temp/data_${method}_`mode'.dta
		save $dir_temp/data_${method}_`mode'.dta, replace
	}
	
	
	use $dir_temp/data_${method}_`mode'.dta, replace
	egen value_year=total(val), by(year)
	generate weight = val/value_year
	
	
	generate N = 0
	generate Nb_sectors = 0
	generate Nb_partners = 0
	
	foreach year of num `time_span' {
		capture tabulate iso_o if year==`year'
		replace Nb_partners=r(r) if year==`year'
		capture tabulate sector if year==`year'
		replace Nb_sectors=r(r) if year==`year'
		egen N_`year'=count(prix_trsp), by(year)
		replace N=N_`year' if year==`year'
		drop N_`year'
		}
		
	
	collect, tags(model[data] var[N] mode[`mode'] digit[${method}]): /*
		*/ sum N [aweight=weight]
	collect, tags(model[data] var[Nb_sectors] mode[`mode'] digit[${method}]): /*
		*/ sum Nb_sectors [aweight=weight]
	collect, tags(model[data] var[Nb_partners] mode[`mode'] digit[${method}]): /*
		*/ sum Nb_partners[aweight=weight] 		

	replace terme_A=terme_A *100
	replace terme_I=(terme_I-1) *100
	
	collect, tags(model[nlAetI] var[terme_I] mode[`mode'] digit[${method}]) /*
		*/ : sum terme_I [aweight=weight], det
	collect, tags(model[nlAetI] var[terme_A] mode[`mode'] digit[${method}]) /*
		*/ : sum terme_A [aweight=weight], det
	collect, tags(model[nlAetI] var[beta] 	 mode[`mode'] digit[${method}]) /*
		*/ : sum beta [aweight=weight], det
	collect, tags(model[nlAetI] var[aic] 	 mode[`mode'] digit[${method}]) /*
		*/ : sum aic [aweight=weight], det
	
	
	save $dir_temp/data_`model'_${method}_`mode'.dta, replace
	
	
	
}


end


table4_part non_séparé
table4_part séparé_pour_robustesse_ns



	
	
	collect layout (model[data]#result[mean]#var[N Nb_sectors Nb_partners] /*
		*/ model[nlAetI]#var[terme_I terme_A beta]#result[mean p50] var[aic]#result[mean]) /* 
		*/ (mode#digit[séparé_pour_robustesse_ns non_séparé])
		
	
	collect label levels digit non_séparé "wo separability"
	collect label levels digit séparé_pour_robustesse_ns "baseline"
	collect label levels var N "{$#$ obs.}"
	collect label levels var Nb_sectors "{$#$ sectors}"
	collect label levels var Nb_partners "{$#$ origin countries}"
	collect label levels result max "\textbf{Data}", modify
	collect label levels result mean "Mean", modify
	collect label levels result p50 "Median", modify
	collect label levels var terme_I "{\textit{Multiplicative term (in $%$)} ($\widehat{\tau}^{adv}$)}", modify
	collect label levels var terme_A "{\textit{Additive term (in $%$)} ($\widehat{t}/\widetilde{p}$)}", modify
	collect label levels var beta "$\widehat{\beta}$:  \textit{-Share of additive costs}", modify
	collect label levels model data "\textbf{Data}", modify
	collect label levels model nlAetI "{\textbf{Estimations}}"
	collect label levels var aic "{\textbf{AIC}}"
	
	collect style cell, warn nformat (%3.1f)
	collect style cell var[beta], warn nformat(%3.2f)
	collect style cell var[aic], warn nformat(%9.0fc)
	collect style cell var[N]#var[Nb_sectors]#var[Nb_partners], warn nformat(%9.0fc)
	collect style column, nodelimiter dups(center) position(top) width(asis)
	
	collect style save myappendixAB, replace
	
	
	collect preview
	
	collect export /* 		 
	*/ "$dir_git/redaction/JEGeo/revision_JEGeo/revised_article/Table4.tex", /*
	*/ tableonly replace
	
	

	*/
	
****************************Graphiques 
*****************Figure 6
/*
local time_span 1974 (1) 2019


foreach mode in air ves {
	
	capture erase $dir_temp/data_`mode'.dta
	foreach method in non_séparé séparé_pour_robustesse_ns {
		foreach year of num `time_span'  {
			open_year_mode_method_model `year' `mode' `method'
			generate model="`method'"
			replace model = "ns" if model=="non_séparé"
			replace model = "separe" if model=="séparé_pour_robustesse_ns"
			keep terme_A_mp terme_A_med terme_I_mp terme_I_med model year
			keep if _n==1
			capture append using $dir_temp/data_`mode'.dta
			save $dir_temp/data_`mode'.dta, replace
		}
	}
	


	
	
	
	
		
	generate share_A_mp = terme_A_mp/(terme_A_mp + terme_I_mp-1)
	generate share_A_med = terme_A_med/(terme_A_med + terme_I_med-1)

	* In percent of the export price
	foreach k in terme_A_mp terme_A_med {
		replace `k' = 100*`k'
		}
	
	foreach k in terme_I_mp terme_I_med {
		replace `k' = 100*(`k'-1)
		}
	
	reshape wide terme_A_mp terme_A_med terme_I_mp terme_I_med share_A_mp share_A_med, i(year) j(model) string
	

	destring year, replace
	gen t = year - 1973
	*tostring year, replace
	
	foreach k in terme_A terme_I share_A {
	
	foreach z in mp med {
	regress `k'_`z'ns t
	
	
	if "`k'" == "terme_A" local title "Additive term"
	if "`k'" == "terme_I" local title "Multiplicative term"
	if "`mode'" == "ves" local modetitle "vessel"
	if "`mode'" == "air" local modetitle "air"
	
	
	*twoway lfit `k'_mpsepare t || lfit `k'_mpns t, xtitle("Year") ytitle("In % of the fas price") title("`k', `x'") legend(label(1 "Separated FE") label(2 "No separated FE")) 
	
	*scatter terme_A_mpns t || lfit terme_A_mpns t 
	*scatter terme_A_mpsepare t || lfit terme_A_mpsepare t
    *scatter terme_A_mpsepare t || lfit terme_A_mpsepare t || lfit terme_A_mpns t
	
	twoway (lfit `k'_`z'separe year, color(black) lpattern(-))(line `k'_`z'separe year, color(black) ) ///
		(lfit `k'_`z'ns year, lpattern(-) color(gs10)) (line `k'_`z'ns year, color(gs10) ) , xtitle("Year") ytitle("In % of the fas price") ///
		title("`title', `modetitle'") legend(on order (2 4) label(1 "Separated FE (trend)") label(2 "Separated FE (baseline)") ///
		label(3 "No separated FE (trend)") label(4 "No separated FE")) ///
		scheme(s1mono) name(graph_`z'_`k'_`mode', replace)
	
	
	
	
	
	
	}

	}
}

grc1leg graph_mp_terme_A_air graph_mp_terme_A_ves graph_mp_terme_I_air graph_mp_terme_I_ves , ///
		cols(2) scheme(s1mono)
	
	
	
quietly capture graph export "$dir_git/redaction/JEGeo/revision_JEGeo/revised_article/graph_robustesse_ns.jpg", replace
	
	
	
*/	
****************Figure 7


local time_span 1974(1)2019

foreach method in non_séparé séparé_pour_robustesse_ns {



	foreach mode in air ves {
		
		foreach year of numlist `time_span' {
		
		
			capture erase "$dir_temp\data_`method'_`mode'", replace 
			open_year_mode_method_model `year' `mode' `method'

			keep sector prix_caf prix_fob val `mode'_wgt iso_o name terme_I terme_A /*coef_iso_A coef_iso_I */contig-distwces mode 
			rename `mode'_wgt wgt
			label var val "Value"
			label var wgt "Weight"
		

			keep if mode =="`mode'"

			gen prix_caf_pond = prix_caf*wgt
			gen prix_fob_pond = prix_fob*wgt

			bys sector iso_o mode : gen nbr_prod=_N

			collapse (sum) prix_caf_pond prix_fob_pond val wgt, by(sector iso_o name terme_I terme_A /*coef_iso_A coef_iso_I*/ contig-distwces mode nbr_prod)

			gen prix_caf = prix_caf_pond/wgt
			gen prix_fob = prix_fob_pond/wgt

			drop prix_caf_pond prix_fob_pond

			gen nbdigits = 3
			gen year = `year'



			** Créer la base de résultats
			capture append using "$dir_temp/data_`method'_`mode'"

			save "$dir_temp/data_`method'_`mode'", replace

							
		}
*log close
	}
}

*** Faire une base par modele qui englobe les deux modes

foreach method in non_séparé séparé_pour_robustesse_ns {

use "$dir_temp/data_`method'_air"

append using "$dir_temp/data_`method'_ves"

save "$dir_temp/data_`method'", replace


foreach mode in air ves {
	erase "$dir_temp/data_`method'_`mode'.dta"
	}
	
	
	
	
}


*** Corriger de certains "bugs" comme pour estimTC


foreach method in non_séparé séparé_pour_robustesse_ns {

** Bug sur "name" à partir de 2005,jamais renseigné

use "$dir_temp/data_`method'", clear

sort iso_o year
foreach x in iso_o {
	forvalues z = 2005(1)2019 {
		replace name = name[_n-1] if iso_o == `x' & year ==`z'
	}
}


save "$dir_temp/data_`method'", replace

** Bug sur "name" à partir de 2011 sur iso_o "SDN"

use "$dir_temp/data_`method'", clear

replace name = "Sudan" if iso_o =="SDN" 
bys iso_o: count if name==""

save "$dir_temp/data_`method'.dta'", replace



}




**** Construire le graphique de dispersion de la part des additifs




foreach method in non_séparé séparé_pour_robustesse_ns {

	use "$dir_temp/data_`method'.dta'", clear
	
	if "`method'"=="non_séparé" local method non_separe
	if "`method'"=="séparé_pour_robustesse_ns" local method separe_pour_rob

	gen beta =(terme_A)/(terme_A+terme_I-1)
		
	label var beta "Share of additive costs"


	egen val_tot_year=total(val), by(year mode)
	gen share_y_val = round((val/val_tot_year)*100000)

	foreach mode in ves air {

		if "`method'" == "non_separe" local title "Non separability assumption"
		if "`method'" == "separe_pour_rob" local title "Separability assumption (baseline)"
		if "`mode'"== "ves" local modetitle "Vessel"
		if "`mode'" == "air" local modetitle "Air"


		
		histogram beta if mode=="`mode'" , width(0.025) kdensity kdenopts(bwidth(0.05)) xtitle("Share of additive costs") ytitle("Density") title("`title', `modetitle'", size(medsmall)) scheme(s1mono) name(beta_nopond_`method'_`mode', replace)
	*	graph export Etude_beta_nopond_`k'_`mode'.jpg, replace

		histogram beta [fweight=share_y_val] if mode=="`mode'" , width(0.025) kdensity kdenopts(bwidth(0.05)) xtitle("Share of additive costs") ytitle("Density") title("`title', `modetitle'", size(medsmall)) scheme(s1mono) name(beta_pond_`method'_`mode', replace)
	*	graph export Etude_beta_pond_`k'_`mode'.jpg, replace

	}
}

	
grc1leg2 beta_nopond_separe_pour_rob_air beta_nopond_non_separe_air ///
	beta_nopond_separe_pour_rob_ves beta_nopond_non_separe_ves , ///
	cols(2) scheme(s1mono) loff
quietly capture graph export "$dir_git/redaction/JEGeo/revision_JEGeo/revised_article/Etude_beta_pond.jpg", replace

